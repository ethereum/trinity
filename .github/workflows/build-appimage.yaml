name: Build AppImage
on: [push]

jobs:
  build:
    name: AppImage
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install libsnappy-dev libsqlite3-dev
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run: |
          cd $GITHUB_WORKSPACE/appimage

          # First, download all the binaries we'll need
          wget -r https://cloudflare-ipfs.com/ipfs/QmPALFn9oeEwpzYkyUMC7zUEZFFVEE9ug6uSREet7WY9Uc -X fonts
          mv cloudflare-ipfs.com/ipfs/QmPALFn9oeEwpzYkyUMC7zUEZFFVEE9ug6uSREet7WY9Uc bin
          chmod -R +x bin

          APPIMAGETOOL=$(openssl sha256 bin/appimagetool-x86_64.AppImage | cut -d'=' -f2 | sed 's/ //')
          if [ "$APPIMAGETOOL" != "d918b4df547b388ef253f3c9e7f6529ca81a885395c31f619d9aaf7030499b13" ]
          then
            echo "unexpected appimagetool hash: $APPIMAGETOOL"
            false
          fi

          LINUXDEPLOY=$(openssl sha256 bin/linuxdeploy-x86_64.AppImage | cut -d'=' -f2 | sed 's/ //')
          if [ "$LINUXDEPLOY" != "7d3b0cf1bf9beda759ef84bad3ecc74e7af7ac46cd4bd581b8f18604e0b54bab" ]
          then
            echo "unexpected linuxdeploy hash: $LINUXDEPLOY"
            false
          fi

          PYTHONPLUGIN=$(openssl sha256 bin/linuxdeploy-plugin-python-x86_64.AppImage | cut -d'=' -f2 | sed 's/ //')
          if [ "$PYTHONPLUGIN" != "eb9c4bfa4ae12c71e6fe4f400926bd87759ef762d1a48c242ab31f9db15a7863" ]
          then
            echo "unexpected pythonplugin hash: $PYTHONPLUGIN"
            false
          fi

          # Build the AppDir
          ROOT=$(dirname $(pwd))
          PIP_REQUIREMENTS="$ROOT" ./bin/linuxdeploy-x86_64.AppImage --plugin python --appdir AppDir -i triceratops.png -d trinity.desktop --custom-apprun=AppRun.trinity

          # Build the first appimage
          ./bin/appimagetool-x86_64.AppImage AppDir Trinity-x86_64.AppImage
          mkdir $GITHUB_WORKSPACE/trinity-appimage
          mv Trinity-x86_64.AppImage $GITHUB_WORKSPACE/trinity-appimage
          cp README $GITHUB_WORKSPACE/trinity-appimage

          # Copy over trinity-beacon's launcher, and build the second appimage
          cp AppRun.trinity-beacon AppDir/AppRun
          ./bin/appimagetool-x86_64.AppImage AppDir Trinity-Beacon-x86_64.AppImage
          mkdir $GITHUB_WORKSPACE/beacon-appimage
          mv Trinity-Beacon-x86_64.AppImage $GITHUB_WORKSPACE/beacon-appimage
          cp README $GITHUB_WORKSPACE/beacon-appimage
      - uses: actions/upload-artifact@master
        with: 
          name: Trinity-x86_64.AppImage
          path: trinity-appimage
      - uses: actions/upload-artifact@master
        with: 
          name: Trinity-Beacon-x86_64.AppImage
          path: beacon-appimage
