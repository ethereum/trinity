[tox]
envlist=
    py{36,37}-{core,p2p,integration,lightchain_integration,eth2,plugins}
    py{36}-long_run_integration
    py{36}-rpc-state-{frontier,homestead,tangerine_whistle,spurious_dragon,byzantium,constantinople,quadratic}
    py{36}-rpc-blockchain
    py{36,37}-libp2p
    py{36,37}-lint
    py{36,37}-wheel-cli
    py36-docs

[flake8]
max-line-length= 100
exclude=
ignore=

[testenv]
usedevelop=True
passenv =
    TRAVIS_EVENT_TYPE
commands=
    core: pytest -n 4 {posargs:tests/core/}
    eth2: pytest -n 4 {posargs:tests/eth2}
    p2p: pytest -n 4 {posargs:tests/p2p}
    plugins: pytest -n 4 {posargs:tests/plugins/}
    rpc-blockchain: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'not GeneralStateTests'}
    rpc-state-frontier: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and Frontier'}
    rpc-state-homestead: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and Homestead'}
    rpc-state-tangerine_whistle: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and EIP150'}
    rpc-state-spurious_dragon: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and EIP158'}
    # The following test seems to consume a lot of memory. Restricting to 3 processes reduces crashes
    rpc-state-byzantium: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and Byzantium'}
    rpc-state-constantinople: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and not stQuadraticComplexityTest and Constantinople'}
    rpc-state-quadratic: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stQuadraticComplexityTest'}
    lightchain_integration: pytest --integration {posargs:tests/integration/test_lightchain_integration.py}

deps = .[p2p,trinity,eth2,test]

basepython =
    py36: python3.6
    py37: python3.7


[testenv:docs]
whitelist_externals=
    make
deps = .[p2p, trinity, eth2, doc]
passenv =
    TRAVIS_EVENT_TYPE
commands=
    make validate-docs

[testenv:wheel-cli]
deps=
    pexpect
    pytest
    pytest-asyncio
    wheel
whitelist_externals=
    /bin/rm
    /bin/bash
    /bin/cd
commands=
    /bin/rm -rf build dist
    python setup.py sdist bdist_wheel
    /bin/bash -c 'pip install --upgrade "$(ls dist/*.whl)""[p2p,trinity]"'
    pytest {posargs:tests/integration/ -k 'trinity_cli'}

[testenv:integration]
deps = .[p2p,trinity,eth2,test]
passenv =
    TRAVIS_EVENT_TYPE
commands=
    pip install -e {toxinidir}/trinity-external-plugins/examples/peer_count_reporter
    # We don't want to run these tests concurrently to avoid running into errors
    # due to multiple Trinity instances competing for the same ports
    pytest --integration -n 1 {posargs:tests/integration/ -k 'not lightchain_integration'}

[testenv:py36-long_run_integration]
deps = .[p2p,trinity,eth2,test]
passenv =
    TRAVIS_EVENT_TYPE
commands =
    pytest -n 1 {posargs:tests/trinity_long_run/}

[testenv:libp2p]
deps = .[libp2p,test]
passenv =
    TRAVIS_EVENT_TYPE
commands =
    pytest -n 1 {posargs:tests/libp2p}

[testenv:lint]
deps = .[p2p,trinity,lint,eth2,libp2p]
commands=
    flake8 {toxinidir}/p2p
    flake8 {toxinidir}/tests
    flake8 {toxinidir}/trinity
    flake8 {toxinidir}/scripts
    flake8 {toxinidir}/eth2
    flake8 --exclude={toxinidir}/libp2p/p2pclient/pb {toxinidir}/libp2p
    mypy -p p2p -p trinity -p eth2 -p libp2p --config-file {toxinidir}/mypy.ini
