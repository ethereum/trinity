[tox]
envlist=
    py{37,38}-{eth1-core,p2p,p2p-trio,integration,lightchain_integration,eth2-core,eth2-fixtures,eth2-integration,eth1-components,eth2-utils,eth2-trio}
    py37-long_run_integration
    py37-rpc-blockchain
    py38-rpc-state-{frontier,homestead,tangerine_whistle,spurious_dragon,byzantium,constantinople,petersburg,istanbul}
    py37-rpc-state-{quadratic,sstore,zero_knowledge}
    py37-eth2-components
    py{38,37}-lint
    py{38,37}-lint-eth2
    py{38,37}-wheel-cli
    py37-docs

[flake8]
max-line-length= 100
exclude=
ignore=W504,W503

[isort]
force_sort_within_sections=True
known_third_party=async_service,asyncio_run_in_process,hypothesis,pytest,async_generator,cytoolz,trio_typing,pytest_trio,factory,milagro_bls_binding,eth_tester
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88

[testenv]
usedevelop=True
setenv =
    MYPYPATH = {toxinidir}/stubs
passenv =
    TRAVIS_EVENT_TYPE
commands=
    eth1-core: pytest -n 4 {posargs:tests/core/}
    eth2-core: pytest -n 4 {posargs:tests/eth2/core/}
    eth2-utils: pytest -n 4 {posargs:tests/eth2/utils-tests/}
    eth2-integration: pytest -n 4 {posargs:tests/eth2/integration/}
    p2p: pytest -n 4 {posargs:tests/p2p}
    p2p-trio: pytest -n 4 {posargs:tests-trio/p2p-trio}
    eth1-components: pytest -n 4 {posargs:tests/components/tx_pool/}
    eth2-components: pytest -n 4 {posargs:tests/components/eth2/}
    rpc-blockchain: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'not GeneralStateTests'}
    # Fork/VM-specific state transition tests; long-running categories run separately!
    rpc-state-frontier: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork Frontier -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-homestead: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork Homestead -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-tangerine_whistle: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork EIP150 -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-spurious_dragon: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork EIP158 -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    # The following test seems to consume a lot of memory. Restricting to 3 processes reduces crashes
    rpc-state-byzantium: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork Byzantium -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-constantinople: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork Constantinople -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-petersburg: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork ConstantinopleFix -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    rpc-state-istanbul: pytest -n 3 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py --fork Istanbul -k 'GeneralStateTests and not stQuadraticComplexityTest and not stSStoreTest and not stZeroKnowledge'}
    # Long-running categories.
    rpc-state-quadratic: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stQuadraticComplexityTest'}
    rpc-state-sstore: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stSStoreTest'}
    rpc-state-zero_knowledge: pytest -n 4 {posargs:tests/json-fixtures-over-rpc/test_rpc_fixtures.py -k 'GeneralStateTests and stZeroKnowledge'}
    lightchain_integration: pytest --integration {posargs:tests/integration/test_lightchain_integration.py}

deps = .[p2p,trinity,eth2,test,test-asyncio]

basepython =
    py37: python3.7
    py38: python3.8

[testenv:py38-p2p-trio]
deps = .[p2p,test,test-trio]
commands = pytest -n 4 {posargs:tests-trio/p2p-trio}

[testenv:py37-p2p-trio]
deps = .[p2p,test,test-trio]
commands = pytest -n 4 {posargs:tests-trio/p2p-trio}

[testenv:py38-eth2-trio]
deps = .[eth2,trinity,test,test-trio]
commands = pytest -n 4 {posargs:tests-trio/eth2} {posargs:tests-trio/trinity} {posargs:tests-trio/integration}

[testenv:py37-eth2-trio]
deps = .[eth2,trinity,test,test-trio]
commands = pytest -n 4 {posargs:tests-trio/eth2} {posargs:tests-trio/trinity} {posargs:tests-trio/integration}

[testenv:py37-docs]
whitelist_externals=
    make
deps = .[p2p, trinity, eth2, doc]
passenv =
    TRAVIS_EVENT_TYPE
commands=
    make validate-docs

[common-wheel-cli]
deps=
    pexpect
    pytest
    pytest-asyncio
    wheel
whitelist_externals=
    /bin/rm
    /bin/bash
    /bin/cd
commands=
    /bin/rm -rf build dist
    python setup.py sdist bdist_wheel
    /bin/bash -c 'pip install --upgrade "$(ls dist/*.whl)""[p2p,trinity]" --progress-bar off'
    pytest {posargs:tests/integration/ -k 'trinity_cli' --log-cli-level 0}

[testenv:py38-wheel-cli]
deps = {[common-wheel-cli]deps}
whitelist_externals = {[common-wheel-cli]whitelist_externals}
commands = {[common-wheel-cli]commands}
skip_install=true
usedevelop=false

[testenv:py37-wheel-cli]
deps = {[common-wheel-cli]deps}
whitelist_externals = {[common-wheel-cli]whitelist_externals}
commands = {[common-wheel-cli]commands}
skip_install=true
usedevelop=false

[common-integration]
deps = .[p2p,trinity,eth2,test,test-asyncio]
passenv =
    TRAVIS_EVENT_TYPE
    TRINITY_ETHERSCAN_API_KEY
commands=
    pip install -e {toxinidir}/trinity-external-components/examples/peer_count_reporter
    # We don't want to run these tests concurrently to avoid running into errors
    # due to multiple Trinity instances competing for the same ports

    # The `trinity_cli` tests are already run by the pyxx-wheel-cli jobs. No need to repeat them here
    pytest --integration -n 1 {posargs:tests/integration/ -k 'not lightchain_integration and not trinity_cli'}

[testenv:py38-integration]
deps = {[common-integration]deps}
passenv = {[common-integration]passenv}
commands = {[common-integration]commands}

[testenv:py37-integration]
deps = {[common-integration]deps}
passenv = {[common-integration]passenv}
commands = {[common-integration]commands}

[testenv:py37-long_run_integration]
deps = {[common-integration]deps}
passenv = {[common-integration]passenv}
commands =
    pytest -s {posargs:tests/trinity_long_run/ --log-cli-level DEBUG}

[common-lint]
deps = .[p2p,trinity,lint]
commands=
    flake8 --config {toxinidir}/tox.ini {toxinidir}/p2p
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/__init__.py
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/conftest.py
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/core
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/integration
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/json-fixtures-over-rpc
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/p2p
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/p2p-trio
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/components
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests/trinity_long_run
    flake8 --config {toxinidir}/tox.ini {toxinidir}/tests-trio
    flake8 --config {toxinidir}/tox.ini --exclude {toxinidir}/trinity/components/eth2 {toxinidir}/trinity
    flake8 --config {toxinidir}/tox.ini {toxinidir}/scripts
    flake8 --config {toxinidir}/tox.ini {toxinidir}/setup.py
    mypy -p trinity --config-file {toxinidir}/mypy.ini
    mypy -p scripts --config-file {toxinidir}/mypy.ini
    mypy -p p2p --config-file {toxinidir}/mypy.ini


[testenv:py38-lint]
deps = {[common-lint]deps}
commands= {[common-lint]commands}


[testenv:py37-lint]
deps = {[common-lint]deps}
commands= {[common-lint]commands}

[common-lint-eth2]
deps = .[eth2-lint,lint,eth2]
commands=
    flake8 --config {toxinidir}/.flake8-eth2 eth2 trinity/components/eth2 tests/eth2 tests/components/eth2 tests-trio/eth2
    mypy -p eth2 -p trinity.components.eth2  --config-file {toxinidir}/mypy.ini
    black --check eth2 trinity/components/eth2 tests/eth2 tests/components/eth2 tests-trio/eth2
    isort --recursive --check-only eth2 trinity/components/eth2 tests/eth2 tests/components/eth2 tests-trio/eth2

[testenv:py38-lint-eth2]
deps = {[common-lint-eth2]deps}
commands= {[common-lint-eth2]commands}

[testenv:py37-lint-eth2]
deps = {[common-lint-eth2]deps}
commands= {[common-lint-eth2]commands}

[common-eth2-utils]
deps = .[eth2,eth2-extra,test]

[testenv:py38-eth2-utils]
deps = {[common-eth2-utils]deps}

[testenv:py37-eth2-utils]
deps = {[common-eth2-utils]deps}

[testenv:py38-eth2-fixtures]
deps = .[eth2,eth2-extra,test]
commands=
    pytest -n 4 --config minimal {posargs:tests/eth2/fixtures/}
    pytest -n 4 --config mainnet {posargs:tests/eth2/fixtures/}


[testenv:py37-eth2-fixtures]
deps = .[eth2,eth2-extra,test]
commands=
    pytest -n 4 --config minimal {posargs:tests/eth2/fixtures/}
    pytest -n 4 --config mainnet {posargs:tests/eth2/fixtures/}
