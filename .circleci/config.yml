version: 2.0

# heavily inspired by:
# https://raw.githubusercontent.com/pinax/pinax-wiki/6bd2a99ab6f702e300d708532a6d1d9aa638b9f8/.circleci/config.yml

common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - run:
        name: checkout fixtures submodule
        command: git submodule update --init --recursive
    - run:
        name: merge pull request base
        command: ./.circleci/merge_pr.sh
    - run:
        name: merge pull request base (2nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - run:
        name: merge pull request base (3nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - restore_cache:
        keys:
          - cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install libsnappy-dev
        command: sudo apt install -y libsnappy-dev
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - save_cache:
        paths:
          - .hypothesis
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
        key: cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

geth_steps: &geth_steps
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-v2-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install libsnappy-dev
        command: sudo apt install -y libsnappy-dev
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: build geth if missing
        command: |
          mkdir -p $HOME/.ethash
          pip install --user py-geth>=2.1.0
          export GOROOT=/usr/local/go
          export GETH_BINARY="$HOME/.py-geth/geth-$GETH_VERSION/bin/geth"
          if [ ! -e "$GETH_BINARY" ]; then
            curl -O https://storage.googleapis.com/golang/go1.10.linux-amd64.tar.gz
            tar xvf go1.10.linux-amd64.tar.gz
            sudo chown -R root:root ./go
            sudo mv go /usr/local
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo apt-get update;
            sudo apt-get install -y build-essential;
            python -m geth.install $GETH_VERSION;
          fi
          sudo ln -s $GETH_BINARY /usr/local/bin/geth
          geth version
    - run:
        name: run tox
        command: ~/.local/bin/tox -r
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - ~/.ethash
          - ~/.py-geth
        key: cache-v2-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

p2pd_steps: &p2pd_steps
  steps:
    - checkout
    - restore_cache:
        keys:
          - cache-v1-{{ arch }}-p2pd-{{ checksum "./.circleci/install_p2pd.sh" }}
    - run:
        name: build libp2p daemon
        command: ./.circleci/install_p2pd.sh
    - save_cache:
        paths:
          - ~/.p2pd
        key: cache-v1-{{ arch }}-p2pd-{{ checksum "./.circleci/install_p2pd.sh" }}
    - restore_cache:
        keys:
          - cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install libsnappy-dev
        command: sudo apt install -y libsnappy-dev
    - run:
        name: install deps
        command: pip install --user tox codecov
    - run:
        name: run tests
        command: |
          command -v p2pd
          ~/.local/bin/tox
    - run:
        name: update codecov
        command: ~/.local/bin/codecov
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
        key: cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

jobs:
  py36-lint:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-lint
  py37-lint:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-lint

  py36-docs:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-docs

  py36-rpc-state-byzantium:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-byzantium
  py36-rpc-state-constantinople:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-constantinople
  py36-rpc-state-frontier:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-frontier
  py36-rpc-state-homestead:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-homestead
  py36-rpc-state-petersburg:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-petersburg

  py36-rpc-state-tangerine_whistle:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-tangerine_whistle
  py36-rpc-state-spurious_dragon:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-state-spurious_dragon
  py36-rpc-blockchain:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-rpc-blockchain

  py36-eth1-core:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-eth1-core
  py36-integration:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-integration
  py36-lightchain_integration:
    <<: *geth_steps
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-lightchain_integration
          GETH_VERSION: v1.8.22
  py36-long_run_integration:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-long_run_integration
  py36-p2p:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-p2p
  py36-eth2-core:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-eth2-core
  py36-eth2-fixtures:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-eth2-fixtures
  py36-eth2-integration:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-eth2-integration
  py36-libp2p:
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-libp2p
    <<: *p2pd_steps
  py36-wheel-cli:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-wheel-cli
  py36-plugins:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV: py36-plugins

  py37-rpc-state-quadratic:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-rpc-state-quadratic
  py37-rpc-state-sstore:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-rpc-state-sstore
  py37-rpc-state-zero_knowledge:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-rpc-state-zero_knowledge

  py37-eth1-core:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth1-core
  py37-integration:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-integration
  py37-p2p:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-p2p
  py37-eth2-core:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-core
  py37-eth2-fixtures:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-fixtures
  py37-eth2-integration:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-integration
  py37-libp2p:
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-libp2p
    <<: *p2pd_steps
  py37-wheel-cli:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-wheel-cli
  py37-plugins:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-plugins

  docker-image-build-test:
    machine: true
    steps:
      - checkout
      - run: docker build -t ethereum/trinity:test-build .
      - run: docker run ethereum/trinity:test-build --help

workflows:
  version: 2
  test:
    jobs:
      - py36-docs

      - py37-eth1-core
      - py37-wheel-cli
      - py37-p2p
      - py37-eth2-core
      - py37-eth2-fixtures
      - py37-eth2-integration
      # - py37-libp2p
      - py37-plugins

      - py37-rpc-state-quadratic
      - py37-rpc-state-sstore
      - py37-rpc-state-zero_knowledge

      - py36-rpc-state-byzantium
      - py36-rpc-state-constantinople
      - py36-rpc-state-frontier
      - py36-rpc-state-homestead
      - py36-rpc-state-petersburg
      - py36-rpc-state-spurious_dragon
      - py36-rpc-state-tangerine_whistle
      - py36-rpc-blockchain

      - py36-eth1-core
      - py36-wheel-cli
      - py36-p2p
      - py36-eth2-core
      - py36-eth2-fixtures
      - py36-eth2-integration
      # - py36-libp2p
      - py36-plugins

      - py36-integration
      - py36-lightchain_integration
      - py36-long_run_integration

      - py36-lint
      - py37-lint

      - docker-image-build-test
